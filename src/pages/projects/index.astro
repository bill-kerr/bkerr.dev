---
import { getCollection } from "astro:content";
import IconGithub from "~/components/icons/IconGithub.astro";
import IconWeb from "~/components/icons/IconWeb.astro";
import Layout from "~/layouts/Layout.astro";
import { getImageMetadata } from "~/utils/image";

const collection = await getCollection("projects");

const imageMetadata = await Promise.all(
	collection.map(({ data }) => getImageMetadata(data.previewImg)),
).then((metadata) => Object.fromEntries(metadata.map((entry) => [entry.src, entry])));

function getDimensionsForImage(src: string) {
	const meta = imageMetadata[src];

	if (!meta) {
		throw new Error(`Metadata for ${src} do not exist.`);
	}

	return {
		width: meta.width,
		height: meta.height,
	};
}
---

<Layout title="Projects">
	<h1 class="text-3xl font-black">My Projects</h1>
	<div class="mt-10 space-y-20">
		{
			collection
				.sort((a, b) => b.data.weight - a.data.weight)
				.map(({ data: { description, github, previewImg, tags, title, web }, slug }) => (
					<div>
						<div class="flex flex-col sm:flex-row">
							<div class="sm:w-1/3 flex-shrink-0">
								<a href={`/projects/${slug}`}>
									<img
										src={previewImg}
										alt={title}
										class="shadow-lg transform -skew-y-1 -rotate-1 rounded-lg"
										{...getDimensionsForImage(previewImg)}
									/>
								</a>
							</div>
							<div class="mt-8 sm:mt-0 sm:ml-6 flex flex-col justify-between">
								<div>
									<a
										href={`/projects/${slug}`}
										class="pl-1 pr-2 inline-block text-lg font-black hyperlink"
									>
										<h2>{title}</h2>
									</a>
									<p class="mt-1 text-gray-600 leading-snug">{description}</p>
								</div>
								<div class="mt-4 flex space-x-4">
									<a
										href={`/projects/${slug}`}
										class="px-3 py-2 flex-1 sm:flex-grow-0 flex-shrink-0 whitespace-nowrap text-center text-gray-600 bg-white hover:text-gray-700 transition-colors font-bold rounded-lg shadow"
									>
										Learn More
									</a>
									{github ? (
										<a
											href={github}
											class="px-3 py-2 flex flex-1 sm:flex-grow-0 items-center justify-center text-gray-600 bg-white hover:text-gray-700 transition-colors font-bold rounded-lg shadow"
										>
											<IconGithub class="h-5 w-5" />
											<span class="ml-2 px-3 sm:px-0 hidden sm:block">Github</span>
											<span class="sr-only sm:hidden">Github</span>
										</a>
									) : null}
									{web ? (
										<a
											href={web}
											class="px-3 py-2 flex flex-1 sm:flex-grow-0 items-center justify-center text-white bg-blue-600 hover:bg-blue-700 transition-colors font-bold rounded-lg shadow"
										>
											<IconWeb class="h-5 w-5" />
											<span class="ml-2 hidden sm:block">Visit</span>
											<span class="sr-only sm:hidden">Visit</span>
										</a>
									) : null}
								</div>
							</div>
						</div>
						{tags && tags.length > 0 ? (
							<div class="mt-3 sm:mt-6 flex flex-wrap text-sm">
								{tags.map((tag) => (
									<span class="mr-2 my-1 py-1 px-2 rounded-full bg-gray-200 text-gray-600">
										{tag}
									</span>
								))}
							</div>
						) : null}
					</div>
				))
		}
	</div>
</Layout>
