---
import { getCollection } from "astro:content";
import Layout from "~/layouts/Layout.astro";
import { getImageMetadata } from "~/utils/image";

const collection = await getCollection("blog");

const imageMetadata = await Promise.all(
	collection.map(({ data }) => getImageMetadata(data.previewImg)),
).then((metadata) => Object.fromEntries(metadata.map((entry) => [entry.src, entry])));

function getDimensionsForImage(src: string) {
	const meta = imageMetadata[src];

	if (!meta) {
		throw new Error(`Metadata for ${src} does not exist.`);
	}

	return {
		width: meta.width,
		height: meta.height,
	};
}
---

<Layout title="Blog">
	<h1 class="text-3xl font-black">My Blog</h1>
	<p class="text-gray-600 mt-2">Check out my past writings here</p>
	<div class="mt-10 space-y-20">
		{
			collection.map(({ data: { date, preview, previewImg, title, tags }, slug }) => (
				<div>
					<div class="flex flex-col sm:flex-row">
						<a href={`/blog/${slug}`} rel="prefetch" class="flex-shrink-0 sm:w-1/3 flex">
							<img
								src={previewImg}
								alt={title}
								class="max-h-64 w-full rounded-lg object-cover"
								{...getDimensionsForImage(previewImg)}
							/>
						</a>
						<div class="mt-4 sm:ml-6 sm:mt-0 flex flex-col justify-between">
							<div>
								<a
									href={`/blog/${slug}`}
									rel="prefetch"
									class="inline-block text-3xl font-black leading-none"
								>
									<h2>{title}</h2>
								</a>
								<p class="mt-2 text-gray-600 leading-snug text-lg">{preview}</p>
							</div>
							<div class="mt-6 flex items-center justify-between text-gray-600">
								<a href="/" rel="prefetch" class="flex items-center">
									<img
										src="/img/profile-photo.webp"
										alt=""
										class="h-8 w-8 rounded-lg"
										height="32"
										width="32"
									/>
									<span class="ml-3">Bill Kerr</span>
								</a>
								<p class="text-gray-500 text-xs uppercase tracking-wide">
									<span>
										{Intl.DateTimeFormat("en-US", {
											month: "long",
											day: "2-digit",
											year: "numeric",
										}).format(date)}
									</span>
								</p>
							</div>
						</div>
					</div>
					{tags && tags.length > 0 ? (
						<div class="mt-3 sm:mt-6 flex flex-wrap text-sm">
							{tags.map((tag) => (
								<span class="mr-2 my-1 py-1 px-2 rounded-full bg-gray-200 text-gray-500">
									{tag}
								</span>
							))}
						</div>
					) : null}
				</div>
			))
		}
	</div>
</Layout>
